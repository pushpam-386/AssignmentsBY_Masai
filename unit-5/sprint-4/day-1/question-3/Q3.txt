WebApplication:
==============

--the application that can be accessed over the web through the http protocol
by using web-browser s/w is known as Webapplication.

--Webapplication resides/deployed on the Webserver/ApplicationServer.this type of application
executes on the webserver only.

--A Java based WA basically contains  web-components or webresources like html file, image file, servlet program, jsp program.

--each webresource program is capable of generating one webpage.

webpage: that we can open through a web browser s/w.

the webpages classified into 2 categories:

1.static webpages : here content will be fixed for each user intraction, they are precreated (before client request) ex: home page of gmail.

--the webresources which can generate static webpages are called static webresource program ex: html file
image file, etc.



2.dynamic webpages: page contents will changed dynamically based on the input given by the user. ex: inbox of Gmail.

--they are not precreated before client request, they will be created based on the input value given by the client dynamically.

--the webresources which can generate dynamic webpages are called dynamic webresource program ex:  Servlet program(it is a java class which implements Servlet interface), jsp file.


Webapplication = static(html file, image file, etc) + dynamic webresource program(Servlet, Jsp programs) + some configuration file

 
Servlet : it is a java class in which we write html code inside (it will generate dynamic html)

class MySrv implements Servlet{   //methods of this Servlet interface called by the ServletContainer
//connect with the DB
//int balance = get the balance from the DB

"<h1>Welcome to MyWebsite</h1>";
"<h1>Your Balance is : "+balance+"</h1>";
}

// from the server, Servlet is only responsible to get the request from the client and generate the response to the client



JSP: It is a html file only in which we can write java code.


Note: A WA is a combination of static webresource + dynamic webresource program.

html file
js code (client side programming language, it will execute on the client machine)
css files
image files
mp3
mp4
servlet program
jsp files
configuration file

--then we need to arrange all the files in a standard folder structure given by sun-microsystem.and then compress that folder in a deployable unit.

---.war file (web-module)   -----> deploy on the webserver/application server ( Web-container)


Similarities/differences bt Webapplication and Webservice:
===============================================

---WS is also a type of WA, that can generate dynamic result as raw data(json, xml, text) instead of generating a html response (webpage)

--WA generates the view(webpage) whereas WS generates raw data.

--this raw data generated by the WS can be reused inside any other WA or any other type of application developed in any technology.

Indigo -----> html   (Webapplication) : it is for enduser
            -----> raw data (Webservices)  :- it is for any other application
Yatra 


--In traditional mvc based webapplication developers need to write the Servlet class which will have all the flow control logic and configure that servlet inside our application.

--whereas in spring-mvc framework developers need not  develop any Servlet class, instead Spring-mvc f/w has given a Servlet will all the flow control logic. (DispatcherServlet)




Client <---------   Http protocol      -------------->Server(Web-Container ( WA or WS ))


https://www.gmail.com

https://ipaddressofGmailserver:portnumberoftheServer/appname/index.html

--here /index.html is uri (home page of the gmail app)