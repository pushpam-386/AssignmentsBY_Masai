Http protocol:
============

--it is a protocol that contains set of rules and guidelines to get communication bt
http client (browser s/w)  and web-server/application-server.

--In case of WA the http client will be web-browser s/w , whereas in case of WS the 
client could be one of the following:

1.brower s/w
2.Postman s/w
3.swagger s/w
4.angular app
5.react app
6.normal JS using ajax (using fetch api)
7.some other application which is developed in another language (.net, python)
8.another type of java application / microservices


--the client of the WS is basically another type of application only.

https://www.gmail.com


https://ipaddress:port/gmailapp/index.html

by typing in the URL
by clicking on the hyperlink
by submitting any form
etc.




Http request structure:
===================

Http request is generated by the client to the server, this request contains lots of details based on the following structure:-


GET (browser url , clicking on hyperlink)
POST (submiting a form, uploading any file )

Note: for a webapplication we can generate only GET or POST method type request.
whereas for a webservices we can generate GET,POST,PUT,DELETE methof type of request.



http request headers:
---------------------------
the headers are the key-value pair, where key is fixed and value will be changed based on the client request.

some of the http request headers are :

1. Date : date and time on which request is made from the client.
2. Host: ipaddress of the client.
3. user-agent: from which browser the client has generated the request.
4.content-type: type of the data coming from the request body (json, txt, xml, pdf, jpg)
5.connection : live or lost
6.cookies: name-value pair text   :- 

we can create our headers also :

JWT ---> token






Http Response Structure:
====================


Webapplication: (it is a combination of static and dynamic webresources(servlet, jsp) , each web resource is capable of generating a web page)
               ---web-server(Web-container ) 

Web-services :        

               http 
client <---------------> Server



http response  : this response will come from the server to the client

http response structure:
--------------------------------

webserver will generate the http response for a http request to the client.

http status code:
-----------------------

--by default these status code will be set by the server, or as a developer we can 
also set our desired status code.

100 -- 199  : information 
200 -- 299 : success or OK
300--399 : redirection
400 -499 : incomplete resource / bad request
500-599 : server-error

---these status code will be used by the client to know the status of their request.


http response headers:
----------------------------

these headers carries some additional information to the client to guide the client
when using or displaying the response.

some of the http response headers are:

server : 
last-modified : 
refresh: 10 
date:
connention: 
content-type: "text/html"  , "application/json", "application/pdf" ,"application/xml"
set-cookie : 
etc..
